name: Deploy to Amazon EKS

on:
  
 
push:
    
   
branches: ["main"]

env:
  AWS_REGION: us-east-1  # Altere para a sua região AWS
  ECR_REPOSITORY_USER: 698564276851.dkr.ecr.us-east-1.amazonaws.com/user-service
  ECR_REPOSITORY_TICKET: 698564276851.dkr.ecr.us-east-1.amazonaws.com/ticket-service
  ECR_REPOSITORY_HELPDESK: 698564276851.dkr.ecr.us-east-1.amazonaws.com/helpdesk-service

jobs:
  deploy:
    name: Deploy
    
   
runs-on: ubuntu-latest
environment: production

steps:
  
- name: Checkout
        
      
uses: actions/checkout@v3
 - name: Configure AWS credentials
        
       
uses: aws-actions/configure-aws-credentials@v1
        
     
with:
          
     
aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          
          
aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      

      
- name: Deploy to EKS
        
     
run: |
          # Autenticar com o cluster EKS
          aws eks --region ${{ env.AWS_REGION }} update-kubeconfig --name apphelpdeskeks

  

          
 
# Fazer o deploy para o cluster Kubernetes
         
kubectl apply -f ./user-service/kubernetes/user-service-deployment.yaml  # Substitua pelo caminho real do seu arquivo de manifesto Kubernetes
kubectl apply -f ./ticket-service/kubernetes/ticket-service-deployment.yaml
kubectl apply -f ./user-service/kubernetes/helpdesk-service-deployment.yaml

      - name: Deploy User Service
        
    
run: |
          # Autenticar com o Amazon ECR para o repositório do usuário
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin $ECR_REPOSITORY_USER

          
       
# Tag e push da imagem do usuário para o ECR
          
       
docker tag user-service:latest $ECR_REPOSITORY_USER:latest
          docker push $ECR_REPOSITORY_USER:latest

      - name: Deploy Ticket Service
        
  
run: |
          # Autenticar com o Amazon ECR para o repositório de ingressos
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin $ECR_REPOSITORY_TICKET

  

          
  
# Tag e push da imagem do ingresso para o ECR
          docker tag ticket-service:latest $ECR_REPOSITORY_TICKET:latest
          
 
docker push $ECR_REPOSITORY_TICKET:latest

      

 
- name: Deploy Helpdesk Service
        run: |
          # Autenticar com o Amazon ECR para o repositório de helpdesk
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 698564276851.dkr.ecr.us-east-1.amazonaws.com

    

          
        
# Tag e push da imagem do helpdesk para o ECR
        
    docker tag helpdesk-service:latest $ECR_REPOSITORY_HELPDESK:latest
          
       

    
docker push $ECR_REPOSITORY_HELPDESK:latest
